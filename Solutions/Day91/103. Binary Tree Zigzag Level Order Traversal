/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> arr = new ArrayList<>();
        if(root== null) return arr;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        Boolean flag = true ;
        while(!queue.isEmpty()){
            int n = queue.size();
            Integer[] row = new Integer[n];
            for(int i = 0 ; i < n ; i ++){
                TreeNode node = queue.poll();
             
                int index = (flag)?i:n-1-i;
                row[index]=node.val;
                if(node.left!=null){
                    queue.offer(node.left);
                }
                if(node.right!=null){
                    queue.offer(node.right);
                }
            }
            flag=!flag;
            arr.add(Arrays.asList(row)); 
        }
        return arr; 
    }

}
