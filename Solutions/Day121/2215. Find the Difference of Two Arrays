class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        List<List<Integer>> nums = new ArrayList<>();
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        List<Integer> num1 = new ArrayList<>();
        List<Integer> num2 = new ArrayList<>();
        for (int i = 0; i < nums1.length; i++) {
            if (!search(nums2, nums1[i])) {
                if (!num1.contains(nums1[i])) {
                    num1.add(nums1[i]);
                }
            }

        }
        for (int i = 0; i < nums2.length; i++) {
            if(!search(nums1,nums2[i])) {
                if(!num2.contains(nums2[i])){
                    num2.add(nums2[i]);
                }
            }

        }
        nums.add(num1);
        nums.add(num2);
        return nums;
    }

    static boolean search(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        while (left <= right) {
            int mid = (left + right) / 2;
            if (nums[mid] == target)
                return true;
            else if (nums[mid] > target)
                right = mid - 1;
            else
                left = mid + 1;
        }
        return false;
    }
}
