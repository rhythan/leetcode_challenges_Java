/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> answer = LOL( root );
        return answer;

    }
    static List<List<Integer>> LOL(TreeNode root ){
        List<List<Integer>> answer = new ArrayList<>(); 
        if(root==null) return answer;
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> ans = new ArrayList<>();
            for(int i = 0 ; i < size ; i++){
                TreeNode cur = q.poll();
                ans.add(cur.val);

                if(cur.left!=null){
                    q.offer(cur.left);
                } 
                if(cur.right!=null){
                    q.offer(cur.right);
                } 
            }
            answer.add(ans);
        }
        return answer;

    }
}
