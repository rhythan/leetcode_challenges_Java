class Solution {
    public boolean hasIncreasingSubarrays(List<Integer> nums, int k) {
        if (nums.size() < 2 * k) return false;

        for (int i = 0; i <= nums.size() - 2 * k; i++) {
            if (check(i, i + 2 * k - 1, nums,k)) {
                return true;
            }
        }
        return false;
    }

    static boolean check(int start, int end,List<Integer> nums,int k) {
        int leftend = start+k-1;
        int rightstart = start+k;
        for(int i = start ; i < leftend ; i++){
            if(nums.get(i)>=nums.get(i+1)) return false;
        }
        for(int i = rightstart ; i < end ; i++){
            if(nums.get(i)>=nums.get(i+1)) return false;
        }
        return true;
    }
}
