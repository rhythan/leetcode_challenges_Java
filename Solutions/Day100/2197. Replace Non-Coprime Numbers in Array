class Solution {
    public List<Integer> replaceNonCoprimes(int[] nums) {
        Stack<Integer> s = new Stack<>();
        for(int n : nums){
            s.push(n);
            while(s.size()>1){
                int a = s.pop();
                int b = s.pop();
                int gcd = GCD(a,b);
                if(gcd>1) {
                    s.push(lcm(a,b));
                }
                else{
                    s.push(b);
                    s.push(a);
                    break;
                }
            }
        }
        return new ArrayList<>(s);

    }
    static int GCD(int a , int b){
        if(b==0) return a ;
        return GCD(b,a%b);
    }
    static int lcm(int a , int b ){
        return a/GCD(a,b)*b;
    }
}
