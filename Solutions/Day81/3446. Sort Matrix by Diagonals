class Solution {
    public int[][] sortMatrix(int[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        Map<Integer,List<Integer>> map = new HashMap<>();
        for(int i = 0  ; i < n ; i ++){
            for(int j = 0 ; j < m ; j ++){
                int key = i - j ;
                map.computeIfAbsent(key, k -> new ArrayList<>()).add(grid[i][j]);
            }
        }
        for(int key : map.keySet()){
            List<Integer> list = map.get(key);
            if(key>=0){
                list.sort(Collections.reverseOrder());
                
            }
            else{
                Collections.sort(list);
            }
        }
        Map<Integer,Integer> index = new HashMap<>();
        for(int i = 0 ; i < n ; i ++){
            for(int j = 0 ; j < m ; j ++){
                int key = i - j ;
                int ind = index.getOrDefault(key,0);
                grid[i][j]=map.get(key).get(ind);
                index.put(key,ind+1);
            }
        }

        return grid;
    }
    
}
