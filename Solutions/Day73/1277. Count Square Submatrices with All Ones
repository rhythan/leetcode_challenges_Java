class Solution {
    public int countSquares(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;

        int[][] psum = new int[m + 1][n + 1];
        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) {
                psum[i][j] = matrix[i - 1][j - 1]
                        + psum[i - 1][j]
                        + psum[i][j - 1]
                        - psum[i - 1][j - 1];
            }
        }

        int cnt = 0;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int maxLen = Math.min(m - i, n - j);

                for (int len = 1; len <= maxLen; len++) {
                    int r1 = i, c1 = j, r2 = i + len - 1, c2 = j + len - 1;

                    int sum = psum[r2 + 1][c2 + 1]
                            - psum[r1][c2 + 1]
                            - psum[r2 + 1][c1]
                            + psum[r1][c1];

                    if (sum == len * len) {
                        cnt++;
                    }
                }
            }
        }
        return cnt;
    }
}
